# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure(2) do |config|
  # Define number of workers
  workers = env("WORKERS") || 1
  consul_servers = env("CONSUL_SERVERS") || 1
  nomad_servers = env("NOMAD_SERVERS") || 1

  config.vm.box = "ubuntu/trusty64"

  # config.vm.define "jenkins-1" do |jenkins|
  #   jenkins.vm.network "private_network", ip: "192.168.50.1"
  #   jenkins.vm.provider "virtualbox" do |v|
  #     v.memory = 1024
  #   end
  #   # Using shell to copy the Docker configuration to
  #   # VM and also build it there. In a more complex setup,
  #   # building Jenkins (/image) should be a separate task itself
  #   # (maybe even use packer.io to achieve it)
  #   jenkins.vm.provision "file", source: "my-jenkins-on-docker", destination: "/tmp/jenkins-image"
  #
  #   # Do regular ansible provisioning
  #   # jenkins.vm.provision "ansible" do |ansible|
  #   #   ansible.playbook = "plays/site.yml"
  #   #   #ansible.galaxy_role_file = "galaxy.roles"
  #   # end
  # end

  (1..consul_servers).each do |id|
    config.vm.define "consul-server-#{ id }" do |consul|
        consul.vm.network "private_network", ip: "192.168.50.#{ 10 + id }"
        consul.vm.hostname = "consul-server-#{ id }"
        consul.vm.provider "virtualbox" do |v|
          v.memory = 256
        end
    end
  end

  (1..nomad_servers).each do |id|
    config.vm.define "nomad-server-#{ id }" do |consul|
        consul.vm.network "private_network", ip: "192.168.50.#{ 40 + id }"
        consul.vm.hostname = "nomad-server-#{ id }"
        consul.vm.provider "virtualbox" do |v|
          v.memory = 256
        end
    end
  end

  config.vm.define "nginx-1" do |box|
     box.vm.network "private_network", ip: "192.168.50.99"
     box.vm.hostname = "nginx-1"
     box.vm.provider "virtualbox" do |v|
       v.memory = 512
    end
  end

  (1..workers).each do |id|
    config.vm.define "worker-#{ id }" do |dev|
      dev.vm.network "private_network", ip: "192.168.50.#{ 30 + id }"
      dev.vm.hostname = "worker-#{ id }"
      dev.vm.provider "virtualbox" do |v|
        v.memory = 1536
      end

      # Only execute once the Ansible provisioner,
      # when all the machines are up and ready.
      if id == workers
        dev.vm.provision "ansible" do |ansible|
          ansible.limit = "all"
          ansible.playbook = "plays/site.yml"
          #ansible.galaxy_role_file = "galaxy-roles.yaml"
          ansible.groups = groups(consul_servers, nomad_servers, workers)
        end
      end
    end
  end
end

def env(key)
  val = ENV[key].to_i
  return nil if val.zero?
  val
end

def groups(num_consul_servers, num_nomad_servers, num_workers)
  jenkins        = [ "jenkins-1" ]
  lb             = [ "nginx-1" ]
  consul_servers = (1..num_consul_servers).to_a.map { |n| "consul-server-#{n}" }
  workers        = (1..num_workers).to_a.map { |n| "worker-#{n}" }
  nomad_servers  = (1..num_nomad_servers).to_a.map { |n| "nomad-server-#{n}" }
  consul_clients = workers + nomad_servers + jenkins
  return {
    "consul-servers"       => consul_servers,
    "nomad-servers"        => nomad_servers,
    "consul-clients"       => consul_clients + lb,
    "workers"              => workers,
    "nomad-clients"        => workers + lb,
    "jenkins"              => jenkins,
    "lbs"                  => lb
  }
end
