# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure(2) do |config|
  # Define number of workers
  workers = env("SWARM_WORKERS") || 1
  consul_servers = env("CONSUL_SERVERS") || 1

  config.vm.box = "ubuntu/trusty64"

  config.vm.define "jenkins" do |jenkins|
    jenkins.vm.network "private_network", ip: "192.168.50.1"
    jenkins.vm.provider "virtualbox" do |v|
      v.memory = 1024
    end
    # Using shell to copy the Docker configuration to
    # VM and also build it there. In a more complex setup,
    # building Jenkins (/image) should be a separate task itself
    # (maybe even use packer.io to achieve it)
    jenkins.vm.provision "file", source: "my-jenkins-on-docker", destination: "/tmp/jenkins-image"

    # Do regular ansible provisioning
    jenkins.vm.provision "ansible" do |ansible|
      ansible.playbook = "plays/jenkins.yml"
      #ansible.galaxy_role_file = "galaxy.roles"
    end
  end

  (1..consul_servers).each do |id|
    config.vm.define "consul-server-#{ id }" do |consul|
        consul.vm.network "private_network", ip: "192.168.40.#{ 1 + id }"
        consul.vm.hostname = "consul-server-#{ id }"
        consul.vm.provider "virtualbox" do |v|
          v.memory = 256
        end

        consul.vm.provision "ansible" do |ansible|
          ansible.playbook = "plays/consul-server-local.yml"
          ansible.galaxy_role_file = "galaxy.roles"
        end
    end
  end

  # Local environment
  config.vm.define "swarm-manager" do |dev|
    dev.vm.network "private_network", ip: "192.168.50.10"
    dev.vm.hostname = "swarm-mananger"
    dev.vm.provider "virtualbox" do |v|
      v.memory = 256
    end

    dev.vm.provision "ansible" do |ansible|
      ansible.playbook = "plays/swarm-manager.yml"
      ansible.galaxy_role_file = "galaxy.roles"
      ansible.groups = {
        "docker_swarm_manager" => [ "swarm-manager" ]
      }
    end
  end

  (1..workers).each do |id|
    config.vm.define "swarm-worker-#{ id }" do |dev|
      dev.vm.network "private_network", ip: "192.168.50.#{ 10 + id }"
      dev.vm.hostname = "swarm-worker-#{ id }"
      dev.vm.provider "virtualbox" do |v|
        v.memory = 512
      end

      # Only execute once the Ansible provisioner,
      # when all the machines are up and ready.
      if id == workers
        dev.vm.provision "ansible" do |ansible|
          ansible.limit = "docker_swarm_manager:docker_swarm_worker"
          ansible.playbook = "plays/swarm-worker.yml"
          ansible.galaxy_role_file = "galaxy.roles"
          ansible.groups = {
              "docker_swarm_manager" => [ "swarm-manager" ],
              "docker_swarm_worker" => [ "swarm-worker-1" ]
          }
        end
      end
    end
  end
end

def env(key)
  val = ENV[key].to_i
  return nil if val.zero?
  val
end

def swarmWorkersList(workers)
  return (1..workers).to_a.map { |n| "dev-swarm-worker-#{n}" }
end

def swarmCompleteList(workers)
  return swarmWorkersList(workers).push("dev-swarm-manager")
end
